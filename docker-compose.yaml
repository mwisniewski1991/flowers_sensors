services:
  proxy:
    build: proxy
    container_name: fproxy
    restart: always
    ports:
      - 81:80
    depends_on:
      - api
    networks:
      - flowers_net

  api:
    build: api
    container_name: fapi
    restart: always
    depends_on:
      - kafka
    ports:
      - 8000:8000
    networks:
      - flowers_net
    volumes:
      - ./api:/app

  zookeeper:
    container_name: fzookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - flowers_net
  
  kafka:
    container_name: fkafka
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      - flowers_net

  consumer:
    build: consumer
    container_name: fconsumer
    restart: always
    depends_on:
      - kafka
    ports:
      - 8001:8001
    networks:
      - flowers_net
    volumes:
      - ./consumer:/app
    env_file:
      - .env

  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    container_name: finfluxdb
    restart: always 
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:${DOCKER_INFLUXDB_INIT_PORT}
    volumes:
      - /home/influxdb2:/var/lib/influxdb2:rw
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    networks:
      - flowers_net

  gafana:
    image: grafana/grafana-oss:${GRAFANA_VERSION}
    container_name: fgrafana
    restart: always
    user: '0'
    ports: 
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=mwdev
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - /home/grafana:/var/lib/grafana
    networks:
      - flowers_net
      
networks:
  flowers_net: